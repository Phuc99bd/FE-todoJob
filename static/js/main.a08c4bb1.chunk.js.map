{"version":3,"sources":["services/auth/reducer.js","services/auth/actionType.js","services/job/reducer.js","services/job/actionType.js","services/reducers.js","services/store.js","services/auth/action.js","services/auth/seletor.js","components/auth/formik/login.js","components/helper/getlocalStorage.js","components/auth/auth.js","containers/login/auth.js","components/auth/formik/register.js","components/auth/register.js","containers/register/register.js","components/helper/initUser.js","components/layout/navbar.js","components/job/jumboton.js","services/job/action.js","components/job/fomik/updateItem.js","components/job/updateJob.js","components/job/tableRow.js","components/job/fomik/addItem.js","components/job/addJob.js","components/job/searchForm.js","services/job/selector.js","components/job/sort.js","components/job/pagination.js","components/job/table.js","containers/job/Job.js","components/auth/logout.js","containers/privateRoute.js","containers/app/App.js","serviceWorker.js","index.js"],"names":["initialState","loading","error","success","authReducer","state","action","type","token","arrJob","numOfJob","keyword","pages","sortByName","sortByActive","status","jobReducer","actionFefeshArr","data","item","filter","i","_id","forEach","message","allReducers","combineReducers","auth","job","store","createStore","compose","applyMiddleware","thunk","Err","Auth","useSelector","SigninSchema","Yup","shape","email","required","password","min","LoginFormik","submitForm","showError","initialValues","validationSchema","onSubmit","values","errors","touched","className","FormLabel","name","placeholder","to","Button","variant","getLocalStorge","Promise","resolve","reject","a","tokenKey","localStorage","getItem","JSON","parse","Date","getTime","expiry","axios","get","then","res","console","log","AuthItem","authProps","propAuth","dispatch","useDispatch","useState","setStatus","useEffect","changeStatus","post","response","loginUser","Container","Row","Col","md","Spinner","animation","Alert","Component","SignupSchema","fullname","RegisterFormik","showSuccess","RegisterItem","register","user","Register","InitUser","NavbarItem","setUser","initUser","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","JumbotronItem","Jumbotron","style","getJOb","props","params","page","typeDeleleJob","typeSearchJob","typeChangeSortName","val","typeChangeSTT","typeChangePage","typeUpdateJob","UpdateFormik","changeSTT","nameJob","active","setErrors","setName","activeI","setActiveI","Form","Control","defaultValue","onChange","e","target","value","onChangeName","as","onClick","UpdateJob","url","method","Swal","fire","TableRow","editStatus","setEditStatus","onDelete","text","icon","showCancelButton","confirmButtonText","cancelButtonText","result","delete","deleteJob","Fragment","addJobSchema","AddFormik","AddJob","addJob","SearchForm","require","shallowEqual","JobProps","Sort","onChangename","changeSortName","onChangeSTT","DropdownButton","ButtonGroup","Dropdown","eventKey","Badge","pill","PaginationI","onChangePage","changePage","Pagination","First","Prev","arr","push","map","check","key","loadItem","Next","Last","TableItem","jobProps","col","Group","Table","striped","bordered","hover","Job","Logout","removeItem","PrivateRoute","component","rest","render","pathname","from","location","defaults","baseURL","interceptors","request","use","config","window","headers","setItem","stringify","App","path","exact","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.a08c4bb1.chunk.js","sourcesContent":["import {\r\n    AUTH_LOGIN_REQUEST,\r\n    AUTH_FALTURE,\r\n    AUTH_LOGIN_COMPLETED,\r\n    REGISTER_COMPLETED\r\n} from \"./actionType\";\r\n\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    error: null,\r\n    success: null,\r\n}\r\n\r\nconst authReducer = (state = initialState , action) => {\r\n    switch (action.type) {\r\n        case AUTH_LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case AUTH_LOGIN_COMPLETED:\r\n            return {...state, token: action.token,loading: false}\r\n        case AUTH_FALTURE:\r\n            return {...state,loading: false, error: action.error,success:null}\r\n        case REGISTER_COMPLETED:\r\n            return {...state,success: action.success,error: null}\r\n        default: \r\n            return state;\r\n    }\r\n}\r\nexport default authReducer","export const AUTH_LOGIN_REQUEST = 'AUTH_LOGIN_REQUEST'\r\nexport const AUTH_LOGIN_COMPLETED = 'AUTH_LOGIN_COMPLETED'\r\nexport const AUTH_FALTURE = 'AUTH_FALTURE'\r\nexport const REGISTER_COMPLETED= 'REGISTER_COMPLETED'","import {\r\n    ADD_JOB,\r\n    DELETE_JOB,\r\n    SEARCH_JOB,\r\n    CHANGE_STATUS,\r\n    SORT_BY_ACTIVE,\r\n    SORT_BY_NAME,\r\n    UPDATE_JOB,\r\n    GET_JOB,\r\n    PAGINATION,\r\n    GET_REQUEST,\r\n    UPDATE_COMPLETE\r\n } from \"./actionType\";\r\n\r\nlet initialState = {\r\n    arrJob: [],\r\n    numOfJob: 1,\r\n    keyword: \"\",\r\n    pages: 1,\r\n    sortByName:1,\r\n    sortByActive: 0,\r\n    status: false,\r\n    loading: false,\r\n    success: null\r\n}\r\n\r\nconst jobReducer = (state = initialState, action) => {\r\n    let actionFefeshArr = {...action.data};\r\n    actionFefeshArr.loading=false;\r\n    delete actionFefeshArr.type;\r\n    switch (action.type) {\r\n        case GET_JOB:              \r\n            return {...state,...actionFefeshArr}\r\n        case GET_REQUEST:\r\n            return {...state,loading: true}\r\n        case SEARCH_JOB:\r\n            return {...state,keyword: action.keyword}\r\n        case ADD_JOB:\r\n            return {...state,arrJob: [action.item,...state.arrJob]}\r\n        case DELETE_JOB:\r\n            return {...state,arrJob: state.arrJob.filter(i=>{\r\n                return i._id !== action._id\r\n            })}\r\n        case PAGINATION:\r\n            return {...state,pages: action.pages}\r\n        case CHANGE_STATUS:\r\n            return {...state,status: !state.status}\r\n        case UPDATE_JOB:\r\n            state.arrJob.forEach(i=>{\r\n                if(i._id === action.item._id){\r\n                     i = action.item;\r\n                }\r\n            })\r\n            return {...state};\r\n        case SORT_BY_NAME:\r\n            return {...state,sortByName: action.sortByName}\r\n        case SORT_BY_ACTIVE:\r\n            return {...state,sortByActive: action.sortByActive}\r\n        case UPDATE_COMPLETE:\r\n            return {...state,success: action.message}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default jobReducer","export const CHANGE_STATUS = 'CHANGE_STATUS'\r\nexport const ADD_JOB = 'ADD_JOB'\r\nexport const UPDATE_JOB = 'UPDATE_JOB'\r\nexport const DELETE_JOB = 'DELETE_JOB'\r\nexport const SEARCH_JOB = 'SEARCH_JOB'\r\nexport const SORT_BY_NAME = 'SORT_BY_NAME'\r\nexport const SORT_BY_ACTIVE = 'SORT_BY_ACTIVE'\r\nexport const GET_JOB= 'GET_JOB'\r\nexport const PAGINATION= 'PAGINATION'\r\nexport const GET_REQUEST ='GET_REQUEST'\r\nexport const UPDATE_COMPLETE= 'UPDATE_COMPLETE'","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth/reducer\";\r\nimport jobReducer from \"./job/reducer\"\r\n\r\nconst allReducers = combineReducers({\r\n    auth: authReducer,\r\n    job: jobReducer\r\n})\r\nexport default allReducers","import thunk from \"redux-thunk\";\r\nimport {applyMiddleware,createStore,compose} from \"redux\";\r\nimport allReducers from \"./reducers\";\r\n\r\n\r\nconst store = createStore(\r\n    allReducers,\r\n    compose(applyMiddleware(thunk))\r\n)\r\n\r\n\r\nexport default store","import axios from \"axios\";\r\n\r\nimport { \r\n    AUTH_FALTURE,\r\n    AUTH_LOGIN_COMPLETED,\r\n    AUTH_LOGIN_REQUEST,\r\n    REGISTER_COMPLETED\r\n} from \"./actionType\";\r\n\r\nconst request= ()=>{\r\n    return {\r\n        type: AUTH_LOGIN_REQUEST\r\n    }\r\n}\r\nconst Err =(error)=>{\r\n    return {\r\n        type: AUTH_FALTURE,\r\n        error: error\r\n    }\r\n}\r\nconst loginSuccess = (token)=>{\r\n    return {\r\n        type: AUTH_LOGIN_COMPLETED,\r\n        token: token\r\n    }\r\n}\r\n\r\nconst registerSuccess = ()=>{\r\n    return {\r\n        type: REGISTER_COMPLETED,\r\n        success: 'Đăng kí thành công.'\r\n    }\r\n}\r\n\r\nexport const loginUser= (email,password)=>{\r\n    return async dispatch=>{\r\n        try{\r\n            dispatch(request())\r\n            const res = await axios.post(\"/login\",{email: email,password:password})\r\n            if(res.data.error)\r\n                dispatch(Err(res.data.error))\r\n            else{\r\n                dispatch(loginSuccess(res.data.token))\r\n            }\r\n        }catch(err){\r\n            if (err.response){\r\n                dispatch(Err(err.response.data))\r\n            } else {\r\n                dispatch(Err(err))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const register = (fullname,email,password)=>{\r\n    return async dispatch=>{\r\n        try{\r\n            dispatch(request())\r\n            let res= await axios.post(\"/register\",{name: fullname, email,password})\r\n            if(res.data.error){\r\n                dispatch(Err(res.data.error))\r\n            }else{\r\n                dispatch(registerSuccess())\r\n            }\r\n\r\n        }catch(err){\r\n            if (err.response){\r\n                dispatch(Err(err.response.data))\r\n            } else {\r\n                dispatch(Err(err))\r\n            }\r\n        }\r\n    }\r\n}","import { useSelector } from \"react-redux\";\r\n\r\n const Auth =()=> {\r\n    return {auth: useSelector(state=> state.auth)}\r\n}\r\nexport default Auth;","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, Alert, FormLabel } from \"react-bootstrap\";\r\nimport { Link} from \"react-router-dom\"\r\n\r\nconst SigninSchema = Yup.object().shape({\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Required\"),\r\n  password: Yup.string().min(2, \"Vui lòng không bỏ trống password\")\r\n});\r\n\r\nexport const LoginFormik = ({loading,submitForm,showError}) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validationSchema={SigninSchema}\r\n        onSubmit={values => {\r\n          let { email ,password} = values;\r\n          submitForm(email,password); \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <FormLabel>Email address</FormLabel>\r\n              <Field name=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n              {errors.email && touched.email ? (\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n             <FormLabel>Password</FormLabel>\r\n              <Field type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n              {errors.password && touched.password ? (\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                {showError()}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <Link to=\"/register\">If you don't have account,Please Register</Link>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {loading()}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst getLocalStorge = ()=>{\r\n    return new Promise(async(resolve,reject)=>{\r\n        try{\r\n            let tokenKey = localStorage.getItem('tokenKey')\r\n            if(!tokenKey)\r\n                return resolve(false);\r\n            \r\n            let item = JSON.parse(tokenKey);\r\n            let now = new Date();\r\n            if(now.getTime() > item.expiry){\r\n                return resolve(false);\r\n             }\r\n            await axios.get(\"/verify\").then(res=>{\r\n                console.log(res.data.success);\r\n                return (res.data.success) ? resolve(true) : resolve(false);\r\n            })\r\n        }catch(err){\r\n            resolve(false);\r\n        }\r\n       \r\n    })\r\n   \r\n}\r\nexport default getLocalStorge;","import React, { useState,useEffect} from \"react\";\r\nimport { Container, Row, Col,Alert,Spinner } from \"react-bootstrap\";\r\nimport { loginUser } from \"../../services/auth/action\";\r\nimport propAuth from \"../../services/auth/seletor\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {LoginFormik} from \"./formik/login\";\r\nimport getLocalStorge from \"../helper/getlocalStorage\";\r\n\r\nconst AuthItem = () =>{\r\n   let authProps = propAuth().auth;\r\n   let dispatch = useDispatch();\r\n   let [status,setStatus] = useState(false);\r\n\r\n\r\n   useEffect(()=>{\r\n    changeStatus();\r\n   },[])\r\n\r\n   const submitForm = (email,password) => {\r\n    return dispatch(loginUser(email,password));\r\n  };\r\n\r\n  const showError = ()=>{\r\n      if(authProps.error){\r\n        return <Alert variant=\"danger\">{authProps.error}</Alert>\r\n      }\r\n  }\r\n\r\n  if(authProps.token && authProps.token !== ''){\r\n      return <Redirect to=\"/\"  />\r\n  }\r\n\r\n  let changeStatus= async()=>{\r\n    let check =await getLocalStorge();\r\n    if(check === true){\r\n      setStatus(true);\r\n    }\r\n  }\r\n  if(status){\r\n    return <Redirect to=\"/\"/>\r\n  }\r\n\r\n  const loading = ()=>{\r\n      return (authProps.loading) ? (<Spinner animation=\"grow\" variant=\"primary\" />) : \"Login\"\r\n  } \r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={6}>\r\n          <h1>Đăng nhập Todo Job</h1>\r\n          <LoginFormik loading={()=>loading()} submitForm={(email,password)=>submitForm(email,password)} showError={()=>showError()} ></LoginFormik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default AuthItem;\r\n","import AuthItem from \"../../components/auth/auth\";\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport default class Auth extends Component {\r\n    render() {\r\n        return (\r\n           <AuthItem/>\r\n        )\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, FormLabel } from \"react-bootstrap\";\r\nimport { Link} from \"react-router-dom\"\r\n\r\nconst SignupSchema = Yup.object().shape({\r\n  fullname: Yup.string()\r\n    .min(3,\"Full name tối thiểu 3 kí tự\")\r\n    .required('Required'),\r\n  email: Yup.string()\r\n    .email(\"Invalid email\")\r\n    .required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(2, \"Vui lòng không bỏ trống password\")\r\n    .required('Required')\r\n});\r\n\r\nexport const RegisterFormik = ({loading,submitForm,showError,showSuccess}) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n          fullname: \"\",\r\n          email: \"\",\r\n          password: \"\"\r\n        }}\r\n        validationSchema={SignupSchema}\r\n        onSubmit={values => {\r\n          let {fullname, email ,password} = values;\r\n          submitForm(fullname,email,password); \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n                <div className=\"form-group\">\r\n              <FormLabel>Fullname</FormLabel>\r\n              <Field name=\"fullname\" type=\"text\" className=\"form-control\" placeholder=\"Enter fullname\" />\r\n              {errors.email && touched.email ? (\r\n                <div className=\"text-danger\">{errors.fullname}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <FormLabel>Email address</FormLabel>\r\n              <Field name=\"email\" type=\"email\" className=\"form-control\" placeholder=\"Enter email\" />\r\n              {errors.email && touched.email ? (\r\n                <div className=\"text-danger\">{errors.email}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n             <FormLabel>Password</FormLabel>\r\n              <Field type=\"password\" name=\"password\" className=\"form-control\" placeholder=\"Password\" />\r\n              {errors.password && touched.password ? (\r\n                <div className=\"text-danger\">{errors.password}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                {showError()}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                {showSuccess()}\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <Link to=\"/login\">If you have account,Please Login</Link>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                {loading()}\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Container, Row, Col,Alert,Spinner } from \"react-bootstrap\";\r\nimport { register } from \"../../services/auth/action\";\r\nimport propAuth from \"../../services/auth/seletor\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RegisterFormik} from \"./formik/register\";\r\n\r\nconst RegisterItem = () =>{\r\n   let authProps = propAuth().auth;\r\n   let dispatch = useDispatch();\r\n\r\n   const submitForm = (fullname,email,password) => {\r\n    return dispatch(register(fullname,email,password));\r\n  };\r\n\r\n  const showError = ()=>{\r\n      if(authProps.error){\r\n        return <Alert variant=\"danger\">{authProps.error}</Alert>\r\n      }\r\n  }\r\n  const showSuccess = ()=>{\r\n    if(authProps.success){\r\n        return <Alert variant=\"success\">{authProps.success}</Alert>\r\n      }\r\n  }\r\n  if(authProps.user && authProps.user != ''){\r\n      return <Redirect to=\"/\"/>\r\n  }\r\n\r\n  const loading = ()=>{\r\n      return (authProps.loading) ? (<Spinner animation=\"grow\" variant=\"primary\" />) : \"Register\"\r\n  } \r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md={6}>\r\n          <h1>Register Account Todo Job</h1>\r\n          <RegisterFormik loading={()=>loading()} submitForm={(fullname,email,password)=>submitForm(fullname,email,password)} showError={()=>showError()} showSuccess={()=>showSuccess()} ></RegisterFormik>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default RegisterItem;\r\n","import RegisterItem from \"../../components/auth/register\";\r\n\r\nimport React, { Component } from 'react'\r\n\r\n\r\nexport default class Register extends Component {\r\n    render() {\r\n        return (\r\n           <RegisterItem/>\r\n        )\r\n    }\r\n}\r\n","import axios from \"axios\";\r\n\r\n\r\nconst InitUser = ()=>{\r\n    return new Promise(async(resolve,reject)=>{\r\n        try{\r\n            let res = await axios.get(\"/user\");\r\n            resolve(res.data);\r\n        }catch(err){\r\n            resolve(err);\r\n        }\r\n       \r\n    })\r\n}\r\nexport default InitUser;","import { Nav, NavDropdown, Navbar } from \"react-bootstrap\";\r\nimport React, { useEffect,useState } from \"react\";\r\nimport InitUser from \"../helper/initUser\";\r\n\r\nconst NavbarItem = () => {\r\n  let [user,setUser] = useState(\"\");\r\n  useEffect(()=>{\r\n    initUser();\r\n  },[])\r\n\r\n  const initUser = async()=>{\r\n    let data = await InitUser();\r\n    if(data.error){\r\n      setUser(\"error\");\r\n    }else{\r\n      setUser(data.user);\r\n    }\r\n  }\r\n  return (\r\n    <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n      <Navbar.Brand href=\"#home\">Todo Job</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n      <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"/\">Home Page</Nav.Link>\r\n        \r\n        </Nav>\r\n        <Nav>\r\n        <NavDropdown title={user.name} id=\"collasible-nav-dropdown\">\r\n            <NavDropdown.Item href=\"/logout\">Logout</NavDropdown.Item>\r\n          \r\n          </NavDropdown>\r\n          <Nav.Link href=\"#\"></Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default NavbarItem;\r\n","import React from \"react\";\r\nimport {Jumbotron,Container} from \"react-bootstrap\";\r\n\r\nconst JumbotronItem =()=>{\r\n    return (<Jumbotron style={{\"text-align\" : \"center\"}}>\r\n        <Container>\r\n          <h1>Quản lý Job</h1>\r\n          <p>\r\n            Building for React-Redux , pattern Hook\r\n          </p>\r\n        </Container>\r\n      </Jumbotron>)\r\n}\r\nexport default JumbotronItem\r\n","import axios from \"axios\";\r\nimport {\r\n    ADD_JOB,\r\n    CHANGE_STATUS,\r\n    DELETE_JOB,\r\n    GET_JOB,\r\n    PAGINATION,\r\n    SEARCH_JOB,\r\n    SORT_BY_ACTIVE,\r\n    SORT_BY_NAME,\r\n    UPDATE_JOB,\r\n    GET_REQUEST,\r\n    UPDATE_COMPLETE\r\n} from \"./actionType\";\r\n\r\n\r\nconst getJob =(data)=>{\r\n    return {\r\n        type: GET_JOB,\r\n        data\r\n    }\r\n}\r\n\r\nconst getRequest =()=>{\r\n    return {\r\n        type: GET_REQUEST\r\n    }\r\n}\r\nconst changeStt =()=>{\r\n    return {\r\n        type: CHANGE_STATUS\r\n    }\r\n}\r\nexport const getJOb =(props)=>{\r\n    return async dispatch=>{\r\n        dispatch(getRequest())\r\n        let res = await axios.get(\"/job/allJob\",{\r\n            params:{\r\n                page: props.job.pages,\r\n                sortByActive: props.job.sortByActive,\r\n                sortByName: props.job.sortByName,\r\n                keyword: props.job.keyword\r\n          }\r\n        }); \r\n        if(res.data.arrJob)\r\n            dispatch(getJob(res.data))\r\n    }\r\n}\r\n\r\nexport const changeStatus = ()=>{\r\n    return async dispatch=>{\r\n        dispatch(changeStt())\r\n    }\r\n}\r\n\r\nconst typeAddJob=(job)=>{\r\n    return {\r\n        type: ADD_JOB,\r\n        item: {...job}\r\n    }\r\n}\r\n\r\nexport const addJob = (nameJob,active)=>{\r\n    return async dispatch=>{\r\n        let res = await axios.post(\"/job/add\",{\r\n            nameJob: nameJob,\r\n            active: active\r\n        });\r\n        if(res.data.job)\r\n            dispatch(typeAddJob(res.data.job))\r\n    }\r\n}\r\n\r\nconst typeDeleleJob=(id)=>{\r\n    return {\r\n        type: DELETE_JOB,\r\n        _id: id\r\n    }\r\n}\r\n\r\nexport const deleteJob =(id)=>{\r\n    return async dispatch=>{\r\n        await axios.delete(`/job/delete/${id}`);\r\n        dispatch(typeDeleleJob(id))\r\n    }\r\n}\r\n\r\nconst typeSearchJob= (keyword)=>{\r\n    return {\r\n        type: SEARCH_JOB,\r\n        keyword: keyword\r\n    }\r\n}\r\n\r\nexport const searchJob = (keyword)=>{\r\n    return async dispatch=>{\r\n        dispatch(typeSearchJob(keyword))\r\n    }\r\n}\r\n\r\nconst typeChangeSortName = (val)=>{\r\n    return {\r\n        type: SORT_BY_NAME,\r\n        sortByName: val\r\n    }\r\n}\r\n\r\nexport const changeSortName = (val)=>{\r\n    return async dispatch=>{\r\n        dispatch(typeChangeSortName(val))\r\n    }\r\n}\r\n\r\nconst typeChangeSTT = (val)=>{\r\n    return {\r\n        type: SORT_BY_ACTIVE,\r\n        sortByActive: val\r\n    }\r\n}\r\n\r\nexport const changeSTT = (val)=>{\r\n    return async dispatch =>{\r\n        dispatch(typeChangeSTT(val))\r\n    }\r\n}\r\n\r\nconst typeChangePage = (val)=>{\r\n    return {\r\n        type: PAGINATION,\r\n        pages: val\r\n    }\r\n}\r\n\r\nexport const changePage =(val)=>{\r\n    return async dispatch =>{\r\n        dispatch(typeChangePage(val))\r\n    }\r\n}\r\n\r\nconst typeUpdateJob = (item)=>{\r\n    return {\r\n        type: UPDATE_JOB,\r\n        item: item\r\n    }\r\n}\r\n\r\nconst typeUpdateComplete =(message)=>{\r\n    return {\r\n        type: UPDATE_COMPLETE,\r\n        message: message\r\n    }\r\n}\r\n\r\nexport const updateJob = (item)=>{\r\n    return async dispatch =>{\r\n        let res =await axios({\r\n            url: `/job/update/${item.id}`,\r\n            method:\"PUT\",\r\n            data: {\r\n                nameJob : item.nameJob,\r\n                active: item.active\r\n            }\r\n        })\r\n        dispatch(typeUpdateComplete(res.data.message))\r\n        dispatch(typeUpdateJob(res.data.job))\r\n    }\r\n}","import React,{useState} from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { Button,Form } from \"react-bootstrap\";\r\n\r\nexport const UpdateFormik = ({submitForm,changeSTT,id,nameJob,active}) => {\r\n  let [errors,setErrors] = useState(\"\");\r\n  let [name,setName] = useState(nameJob);\r\n  let [activeI ,setActiveI] = useState(active);\r\n  const onSubmit= ()=>{\r\n    if(name === \"\"){\r\n        setErrors(\"Vui lòng không bỏ trống tên công việc.\");\r\n        return false;\r\n    }\r\n    submitForm(id,name,activeI);\r\n  }\r\n  const onChangeName = (e)=>{\r\n    (e.target.value ==\"\") ?  setErrors(\"Vui lòng không bỏ trống tên công việc.\") : setErrors(\"\");\r\n    setName(e.target.value);\r\n  }\r\n  return (\r\n           <tr>\r\n                <td>\r\n                    {id}\r\n                </td>\r\n                <td>\r\n                    <Form.Control name=\"nameJob\" type=\"text\" className=\"form-control\" placeholder=\"Enter nameJob\" defaultValue={nameJob} onChange={(e)=>onChangeName(e)} />\r\n                {errors ? (\r\n                    <div className=\"text-danger\">{errors}</div>\r\n                ) : null}\r\n                </td>\r\n                <td>\r\n                <Form.Control as=\"select\" name=\"active\" className=\"form-control\" defaultValue={active} onChange={(e)=>setActiveI(e.target.value)} >\r\n                    <option value={true}>Kích hoạt</option>\r\n                    <option value={false}>Ẩn</option>\r\n                </Form.Control>\r\n                </td>\r\n                <td>\r\n                <Button variant=\"danger\" type=\"submit\" onClick={()=>onSubmit()} >\r\n                    Update\r\n                </Button>\r\n            \r\n                <Button variant=\"primary\" type=\"submit\" onClick={()=>changeSTT()}>\r\n                    Cancel\r\n                </Button>\r\n                </td>\r\n              \r\n           </tr>   \r\n   \r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { UpdateFormik } from \"./fomik/updateItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateJob,getJOb } from \"../../services/job/action\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst UpdateJob = ({id,nameJob,active,changeSTT,props})=>{\r\n    let dispatch = useDispatch();\r\n    const submitForm = (id,name,active) => {\r\n       dispatch(updateJob({id: id ,nameJob: name, active: active}))\r\n       dispatch(getJOb(props));\r\n       Swal.fire(\"Update complete!\",`Update Job with Id: ${id} successfully!`,\"success\");\r\n       changeSTT();\r\n    };\r\n      \r\n    return (  \r\n        <UpdateFormik id={id} nameJob={nameJob} active={active} changeSTT={()=>changeSTT()} submitForm={(id,name,active)=>submitForm(id,name,active)} changeSTT={()=>changeSTT()}></UpdateFormik>\r\n    )\r\n}\r\n\r\nexport default UpdateJob","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Swal from 'sweetalert2'\r\nimport { deleteJob } from \"../../services/job/action\";\r\nimport UpdateJob from \"./updateJob\";\r\n\r\nconst TableRow = ({ id, name, active ,props}) => {\r\n\r\n  let [editStatus, setEditStatus] = useState(false);\r\n\r\n  let dispatch = useDispatch();\r\n  const onDelete = () => {\r\n    Swal.fire({\r\n      title: \"Bạn có chắc chắn không?\",\r\n      text: \"You will not be able to recover this imaginary element!\",\r\n      icon: \"warning\",\r\n      showCancelButton: true,\r\n      confirmButtonText: \"Yes, delete it!\",\r\n      cancelButtonText: \"No, keep it\"\r\n    }).then(result => {\r\n      if (result.value) {\r\n        dispatch(deleteJob(id))\r\n        Swal.fire(\"Deleted!\", \"Your element has been deleted.\", \"success\");\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n\r\n  const loading = () => {\r\n    return !editStatus ? (\r\n      <tr>\r\n        <td>{id}</td>\r\n        <td>{name}</td>\r\n        <td>{active ? \"Kích hoạt\" : \"Ẩn\"}</td>\r\n        <td>\r\n          <button\r\n            className=\"btn btn-warning\"\r\n            onClick={() => setEditStatus(!editStatus)}\r\n          >\r\n            <i className=\"fa fa-edit\" />\r\n            Sửa\r\n          </button>\r\n          <button className=\"btn btn-danger\" onClick={() => onDelete()}>\r\n            <i className=\"fa fa-edit\" />\r\n            Xóa\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    ) : (<UpdateJob props={props} id={id} nameJob={name} active={active} changeSTT={()=>setEditStatus(!editStatus)}></UpdateJob>);\r\n  };\r\n  return <React.Fragment>{loading()}</React.Fragment>;\r\n};\r\n\r\nexport default TableRow\r\n","import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, Alert, FormLabel } from \"react-bootstrap\";\r\n\r\nconst addJobSchema = Yup.object().shape({\r\n  nameJob: Yup.string()\r\n    .min(2,\"Vui lòng không bỏ trống nameJob.\")\r\n    .required(\"Required\")\r\n});\r\n\r\nexport const AddFormik = ({submitForm,changeSTT}) => {\r\n  return (\r\n    <div>\r\n      <Formik\r\n        initialValues={{\r\n            nameJob: \"\",\r\n            active: true\r\n        }}\r\n        validationSchema={addJobSchema}\r\n        onSubmit={values => {\r\n          let { nameJob ,active} = values;\r\n          submitForm(nameJob,active); \r\n        }}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <div className=\"form-group\">\r\n              <Alert variant=\"primary\">Tên công việc </Alert>\r\n              <Field name=\"nameJob\" type=\"text\" className=\"form-control\" placeholder=\"Enter nameJob\" />\r\n              {errors.nameJob && touched.nameJob ? (\r\n                <div className=\"text-danger\">{errors.nameJob}</div>\r\n              ) : null}\r\n            </div>\r\n            <div className=\"form-group\">\r\n             <FormLabel>Trạng thái</FormLabel>\r\n              <Field as=\"select\" name=\"active\" className=\"form-control\">\r\n                 <option value={true}>Kích hoạt</option>\r\n                 <option value={false}>Ẩn</option>\r\n              </Field>\r\n           \r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button variant=\"danger\" type=\"button\" className=\"form-control\" onClick={()=>changeSTT()}>\r\n                 X\r\n              </Button>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <Button variant=\"primary\" type=\"submit\" className=\"form-control\">\r\n                Thêm mới\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { AddFormik } from \"./fomik/addItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addJob} from \"../../services/job/action\";\r\n\r\nconst AddJob = ({changeSTT})=>{\r\n    let dispatch = useDispatch();\r\n    const submitForm = (nameJob,active) => {\r\n        dispatch(addJob(nameJob,active));\r\n    };\r\n\r\n    return (\r\n        <Col md={3}>\r\n            <AddFormik submitForm={(nameJob,active)=>submitForm(nameJob,active)} changeSTT={()=>changeSTT()}></AddFormik>\r\n        </Col>\r\n    )\r\n}\r\n\r\nexport default AddJob","import React from \"react\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport { getJOb, searchJob} from \"../../services/job/action\";\r\nconst SearchForm =({props})=>{\r\n    let dispatch = useDispatch();\r\n    const onChange = (e)=>{\r\n        dispatch(searchJob(e.target.value))\r\n        props.job.keyword= e.target.value;\r\n        dispatch(getJOb(props));\r\n    }\r\n        \r\n    return (<input type=\"text\" className=\"form-control\" placeholder=\"Search name Job....\" defaultValue={props.job.keyword} onChange={(e)=>onChange(e)}/>)  \r\n}\r\n\r\n export default SearchForm;","\r\nconst {useSelector,shallowEqual} = require(\"react-redux\")\r\n\r\nconst JobProps = ()=>{\r\n    return { job: {...useSelector(state=>state.job),...useSelector(state=>state.auth.user,shallowEqual)}}\r\n}\r\nexport default JobProps","import React from \"react\";\r\nimport { Dropdown, DropdownButton, Badge, ButtonGroup } from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {changeSortName,getJOb,changeSTT} from \"../../services/job/action\";\r\n\r\nconst Sort = ({props}) => {\r\n  let dispatch = useDispatch();\r\n\r\n  const onChangename = (val) => {\r\n    dispatch(changeSortName(val))\r\n    props.job.sortByName =val\r\n    dispatch(getJOb(props))\r\n  };\r\n  const onChangeSTT = (val)=>{\r\n    dispatch(changeSTT(val))\r\n    props.job.sortByActive =val\r\n    dispatch(getJOb(props))\r\n  }\r\n  const loadText = ()=>{\r\n      return (props.job.sortByActive === 0) ? \"Tất cả\" : (props.job.sortByActive === -1) ? \"Kích hoạt\" : \"Ẩn\"\r\n  }\r\n \r\n  return (\r\n    <React.Fragment>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        className=\"m-3\"\r\n        variant=\"danger\"\r\n        title={\"Sắp xếp\"}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\" onClick={()=>onChangename(1)}>\r\n          <span>Sắp xếp từ A-Z &nbsp;&nbsp;</span>\r\n          {props.job.sortByName === 1 && (\r\n            <Badge pill variant=\"secondary\">\r\n              x\r\n            </Badge>\r\n          )}\r\n        </Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\" onClick={()=>onChangename(-1)}>\r\n          <span>Sắp xếp từ Z-A &nbsp;&nbsp;</span>{\" \"}\r\n          {props.job.sortByName === -1 && (\r\n            <Badge pill variant=\"secondary\">\r\n              x\r\n            </Badge>\r\n          )}\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n      <DropdownButton\r\n        as={ButtonGroup}\r\n        className=\"m-3\"\r\n        variant=\"danger\"\r\n        title={loadText()}\r\n      >\r\n        <Dropdown.Item eventKey=\"1\" onClick={()=>onChangeSTT(0)}>\r\n          <span>Tất cả &nbsp;&nbsp;</span>\r\n        {props.job.sortByActive === 0 && ( <Badge pill variant=\"secondary\">\r\n            x\r\n          </Badge>)}    \r\n        </Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\" onClick={()=>onChangeSTT(-1)}>\r\n        \r\n          <span> Kích hoạt &nbsp;&nbsp;</span>  {props.job.sortByActive ===-1 && (<Badge pill variant=\"secondary\">\r\n            x\r\n          </Badge>)}\r\n        </Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\" onClick={()=>onChangeSTT(1)}>\r\n         \r\n          <span> Ẩn &nbsp;&nbsp;</span>  {props.job.sortByActive ===1 && (<Badge pill variant=\"secondary\">\r\n            x\r\n          </Badge>)}\r\n        </Dropdown.Item>\r\n      </DropdownButton>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Sort;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Pagination } from \"react-bootstrap\";\r\nimport { changePage,getJOb } from \"../../services/job/action\"; \r\n\r\nconst PaginationI =({props}) => {\r\n\r\n  let dispatch = useDispatch();\r\n  const onChangePage=(val)=>{\r\n     console.log(val);\r\n     dispatch(changePage(val));\r\n     props.job.pages = val;\r\n     dispatch(getJOb(props));\r\n  }\r\n  let loadingFirst =()=>{\r\n      return (props.job.pages !== 1 && props.job.numOfJob > 1) && (<Pagination.First onClick={()=>onChangePage(1)} />)\r\n  }\r\n  let loadingLast=()=>{\r\n      return (props.job.pages !== props.job.numOfJob) && (<Pagination.Last onClick={()=>onChangePage(props.job.numOfJob)}/>)\r\n  }\r\n  let loadingPrev=()=>{\r\n      return (props.job.pages > 1 && props.job.numOfJob > 1) && (<Pagination.Prev onClick={()=>onChangePage(props.job.pages - 1)} />)\r\n  }\r\n  let loadingNext=()=>{\r\n    return (props.job.pages !==props.job.numOfJob && props.job.numOfJob > 1) && (<Pagination.Next onClick={()=>onChangePage(props.job.pages + 1)} />)\r\n  }\r\n  let loadItem =()=>{\r\n      let arr=[];\r\n      for(let i=1;i<=props.job.numOfJob;i++){ \r\n         arr.push(i);\r\n      }\r\n      return arr.map(i=>{\r\n         let check = props.job.pages === i ? true :false;\r\n        return ( <Pagination.Item key={i} onClick={()=>onChangePage(i)} active={check}>{i}</Pagination.Item>)\r\n      })\r\n      \r\n  }\r\n  return (\r\n    <Pagination>\r\n      {loadingFirst()}\r\n      {loadingPrev()}\r\n      {loadItem()}\r\n      {loadingNext()}\r\n      {loadingLast()}\r\n    </Pagination>\r\n  );\r\n};\r\nexport default PaginationI\r\n","import React, { useEffect } from \"react\";\r\nimport { Table, Container, Row, Col,Spinner,Form ,Button} from \"react-bootstrap\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { getJOb,changeStatus } from \"../../services/job/action\";\r\nimport TableRow from \"./tableRow\";\r\nimport AddJob from \"./addJob\";\r\nimport SearchForm from \"./searchForm\";\r\nimport jobProps from \"../../services/job/selector\";\r\nimport Sort from \"./sort\";\r\nimport Pagination from \"./pagination\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst TableItem = () => {\r\n  let dispatch = useDispatch();\r\n  let props = jobProps();\r\n  useEffect(() => {\r\n    dispatch(getJOb(props));\r\n  },[]);\r\n\r\n  let col = props.job.status ? 9 : 12;\r\n  const renderData= ()=>{\r\n      let data = props.job.arrJob.map(i=>{\r\n          return (<TableRow key={i._id} id={i._id} name={i.nameJob} active={i.active} props={props}></TableRow>)\r\n      })\r\n      return data;\r\n  }\r\n  const loading = ()=>{\r\n      if(props.job.loading){\r\n          return (<Spinner animation=\"grow\" variant=\"primary\" />)\r\n      }\r\n  }\r\n  const changeSTT =()=>{\r\n      dispatch(changeStatus())\r\n  }\r\n  const loadAdd=()=>{\r\n      return props.job.status ? <AddJob changeSTT={()=>changeSTT()}></AddJob> : \"\"; \r\n  }\r\n \r\n  return (\r\n    <Container>\r\n      <Row>\r\n          {loadAdd()}\r\n        <Col md={col}>\r\n             <Form.Group className=\"d-inline-block w-100\">\r\n               {!props.job.status && <Button variant=\"primary\"  type=\"button\" onClick={()=>changeSTT()} >Thêm công việc</Button>} \r\n               <Sort props={props}></Sort>\r\n               <hr/><SearchForm props={props}></SearchForm>\r\n           </Form.Group>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>#</th>\r\n                <th>Name Job</th>\r\n                <th>Trạng thái</th>\r\n                <th>Action</th>\r\n              </tr>\r\n            </thead>\r\n             <tbody>{renderData()}</tbody>\r\n          </Table>\r\n          {loading()}\r\n          <Pagination props={props}></Pagination>\r\n\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default TableItem;\r\n","import Navbar from \"../../components/layout/navbar\";\r\nimport React, { Component } from \"react\";\r\nimport Jumbotron from \"../../components/job/jumboton\";\r\nimport Table from \"../../components/job/table\";\r\n\r\nclass Job extends Component{    \r\n    render(){\r\n        return (\r\n          <React.Fragment>\r\n            <Navbar></Navbar>\r\n            <Jumbotron></Jumbotron>\r\n            <Table></Table>\r\n          </React.Fragment>\r\n        )\r\n    }\r\n}\r\nexport default Job;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst Logout = ()=>{\r\n    localStorage.removeItem(\"tokenKey\");\r\n    return <Redirect to=\"/login\" />\r\n}\r\nexport default Logout;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n        localStorage.getItem('tokenKey')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)\r\n\r\nexport default PrivateRoute ","import React, { Component } from 'react';\nimport axios from \"axios\";\nimport { Provider } from \"react-redux\";\nimport store from \"../../services/store\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Auth from \"../login/auth\";\nimport Register from \"../register/register\";\nimport Job from '../job/Job';\nimport Logout from \"../../components/auth/logout\";\nimport PrivateRoure from \"../privateRoute\";\n\naxios.defaults.baseURL = 'https://chiseled-easy-poinsettia.glitch.me';\n\naxios.interceptors.request.use(config=>{\n  if(window.location.href === '/login'){\n    return config\n  }\n  const tokenKey = localStorage.getItem('tokenKey')\n  if (tokenKey) {\n    let item = JSON.parse(tokenKey);\n    let now = new Date();\n    if(now.getTime()> item.expiry){\n      localStorage.removeItem('tokenKey')\n    }else{\n      config.headers['x-access-token'] = item.token;\n    }\n  }\n  return config\n})\n\naxios.interceptors.response.use(response => {\n  if (window.location.href === '/login') {\n    return response\n  }\n  const tokenKey = response.data?.token || null;\n  if (tokenKey) {\n    const item = {\n      token: tokenKey,\n      expiry: new Date().getTime() +60000*60*24\n    }\n    localStorage.setItem('tokenKey', JSON.stringify(item))\n  }\n  return response\n}, function (error) {\n  return Promise.reject(error)\n})\n\nclass App extends Component {\n  render(){\n    return (<Provider store={store}>\n      <Router>\n         <Route path=\"/login\" component={Auth} />\n         <Route path=\"/register\" component={Register} />\n         <PrivateRoure path=\"/\" exact={true} component={Job}/>   \n         <Route path=\"/logout\" exact={true} component={Logout}/>   \n      </Router>\n    </Provider>)\n  }\n \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/app/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n    <App/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}